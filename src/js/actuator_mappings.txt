GET http://127.0.0.1:4000/actuator/mappings HTTP/1.1
User-Agent: vscode-restclient
Authorization: Bearer: eyJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJ1c2VyOmNhbnVwbG9hZDphZGhvY21lc3NhZ2UiLCJ1c2VyOmNhbmRvd25sb2FkOmZpbGVzIiwidXNlcjpjYW5tYW5hZ2U6dXNlcnMiLCJ1c2VyOmNhbmFsdGVyX2JhY2t1cF9wb2xpY3kiLCJ1c2VyOmNhbmFsdGVyOm1lc3NhZ2UiLCJST0xFX0FETUlOIiwidXNlcjpjYW5kaXNhYmxlOnB1Ymxpc2hpbmciXSwiZXhwIjoxNjg0OTc2NzA2LCJpYXQiOjE2ODQ5NDA3MDYsInVzZXJuYW1lIjoiYWthcGV0YW4ifQ.-tcUmPcUyI9WslVmKfHreGHsseXF94QN3HhohpLhdII
accept-encoding: gzip, deflate



HTTP/1.1 200 
Access-Control-Allow-Origin: *
Access-Control-Allow-Methods: GET, POST, PUT, DELETE, OPTIONS
Access-Control-Allow-Headers: authorization, content-type
Access-Control-Max-Age: 3600
X-Content-Type-Options: nosniff
X-XSS-Protection: 1; mode=block
Cache-Control: no-cache, no-store, max-age=0, must-revalidate
Pragma: no-cache
Expires: 0
X-Frame-Options: DENY
Content-Type: application/vnd.spring-boot.actuator.v3+json
Transfer-Encoding: chunked
Date: Wed, 24 May 2023 15:52:42 GMT
Connection: close

{
  "contexts": {
    "application": {
      "mappings": {
        "dispatcherServlets": {
          "dispatcherServlet": [
            {
              "handler": "Actuator web endpoint 'configprops'",
              "predicate": "{GET [/actuator/configprops], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/configprops"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator root web endpoint",
              "predicate": "{GET [/actuator], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.WebMvcLinksHandler",
                  "name": "links",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Ljava/util/Map;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'loggers-name'",
              "predicate": "{GET [/actuator/loggers/{name}], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/loggers/{name}"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'scheduledtasks'",
              "predicate": "{GET [/actuator/scheduledtasks], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/scheduledtasks"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'mappings'",
              "predicate": "{GET [/actuator/mappings], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/mappings"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'loggers'",
              "predicate": "{GET [/actuator/loggers], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/loggers"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'health'",
              "predicate": "{GET [/actuator/health], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/health"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'info'",
              "predicate": "{GET [/actuator/info], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/info"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'health-path'",
              "predicate": "{GET [/actuator/health/**], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/health/**"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'caches-cache'",
              "predicate": "{DELETE [/actuator/caches/{cache}], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "DELETE"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/caches/{cache}"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'heapdump'",
              "predicate": "{GET [/actuator/heapdump], produces [application/octet-stream]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/heapdump"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/octet-stream",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'threaddump'",
              "predicate": "{GET [/actuator/threaddump], produces [text/plain;charset=UTF-8]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/threaddump"
                  ],
                  "produces": [
                    {
                      "mediaType": "text/plain;charset=UTF-8",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'threaddump'",
              "predicate": "{GET [/actuator/threaddump], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/threaddump"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'env'",
              "predicate": "{GET [/actuator/env], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/env"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'conditions'",
              "predicate": "{GET [/actuator/conditions], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/conditions"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'caches'",
              "predicate": "{DELETE [/actuator/caches]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "DELETE"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/caches"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'beans'",
              "predicate": "{GET [/actuator/beans], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/beans"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'caches-cache'",
              "predicate": "{GET [/actuator/caches/{cache}], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/caches/{cache}"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'metrics'",
              "predicate": "{GET [/actuator/metrics], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/metrics"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'loggers-name'",
              "predicate": "{POST [/actuator/loggers/{name}], consumes [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/loggers/{name}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'env-toMatch'",
              "predicate": "{GET [/actuator/env/{toMatch}], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/env/{toMatch}"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'caches'",
              "predicate": "{GET [/actuator/caches], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/caches"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "Actuator web endpoint 'metrics-requiredMetricName'",
              "predicate": "{GET [/actuator/metrics/{requiredMetricName}], produces [application/vnd.spring-boot.actuator.v3+json || application/vnd.spring-boot.actuator.v2+json || application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping.OperationHandler",
                  "name": "handle",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljava/util/Map;)Ljava/lang/Object;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/actuator/metrics/{requiredMetricName}"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v3+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/vnd.spring-boot.actuator.v2+json",
                      "negated": false
                    },
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.UsersController#updateUser(SpectraWebUser)",
              "predicate": "{POST [/api/users/updateuser], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.UsersController",
                  "name": "updateUser",
                  "descriptor": "(Lgr/wind/FullStackSpring_Review/model/SpectraWebUser;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/users/updateuser"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#changeMessageforIncidentId(String, String)",
              "predicate": "{PUT [/api/incidents/nova_changemessageforincidentid/{incidentId}/{message}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "changeMessageforIncidentId",
                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_changemessageforincidentid/{incidentId}/{message}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#setWillBePublishedNOforIncidentId(String)",
              "predicate": "{PUT [/api/incidents/willbepublishednoforincidentid/{incidentId}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "setWillBePublishedNOforIncidentId",
                  "descriptor": "(Ljava/lang/String;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/willbepublishednoforincidentid/{incidentId}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaAdHocOutagesController#deleteAdhocIncident(int)",
              "predicate": "{DELETE [/api/incidents/nova_deleteadhocincident/{id}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaAdHocOutagesController",
                  "name": "deleteAdhocIncident",
                  "descriptor": "(I)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "DELETE"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_deleteadhocincident/{id}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.UsersController#getDistinctRoles()",
              "predicate": "{GET [/api/users/getdistinctroles], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.UsersController",
                  "name": "getDistinctRoles",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/users/getdistinctroles"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#setWillBePublishedYESforIncidentId(String)",
              "predicate": "{PUT [/api/incidents/willbepublishedyesforincidentid/{incidentId}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "setWillBePublishedYESforIncidentId",
                  "descriptor": "(Ljava/lang/String;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/willbepublishedyesforincidentid/{incidentId}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#download(String, String)",
              "predicate": "{GET [/api/incidents/nova_downloadfile/{dirname1}/{fileNamePattern}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "download",
                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_downloadfile/{dirname1}/{fileNamePattern}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.AuthenticateController#createAuthenticationToken(AuthenticationRequest)",
              "predicate": "{POST [/api/authenticate], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.AuthenticateController",
                  "name": "createAuthenticationToken",
                  "descriptor": "(Lgr/wind/FullStackSpring_Review/model/AuthenticationRequest;)Lorg/springframework/http/ResponseEntity;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/authenticate"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.UsersController#enableUser(SpectraWebUser)",
              "predicate": "{POST [/api/users/enableuser], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.UsersController",
                  "name": "enableUser",
                  "descriptor": "(Lgr/wind/FullStackSpring_Review/model/SpectraWebUser;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/users/enableuser"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.AdHocOutagesController#getAllIncidents()",
              "predicate": "{GET [/api/incidents/getalladhocoutages], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.AdHocOutagesController",
                  "name": "getAllIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getalladhocoutages"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#setWillBePublishedYESforIncidentId(String)",
              "predicate": "{PUT [/api/incidents/nova_willbepublishedyesforincidentid/{incidentId}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "setWillBePublishedYESforIncidentId",
                  "descriptor": "(Ljava/lang/String;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_willbepublishedyesforincidentid/{incidentId}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#setWillBePublishedNOforIncidentId(String)",
              "predicate": "{PUT [/api/incidents/nova_willbepublishednoforincidentid/{incidentId}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "setWillBePublishedNOforIncidentId",
                  "descriptor": "(Ljava/lang/String;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_willbepublishednoforincidentid/{incidentId}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#getAllIncidents()",
              "predicate": "{GET [/api/incidents/nova_getallincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "getAllIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_getallincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#getAllIncidents()",
              "predicate": "{GET [/api/incidents/getallincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "getAllIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getallincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#getOpenIncidents()",
              "predicate": "{GET [/api/incidents/nova_getopenincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "getOpenIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_getopenincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#getOpenIncidents()",
              "predicate": "{GET [/api/incidents/getopenincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "getOpenIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getopenincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#getStatsForNovaIncidentID(String)",
              "predicate": "{GET [/api/incidents/getstatsfornovaincidentid/{incidentId}], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "getStatsForNovaIncidentID",
                  "descriptor": "(Ljava/lang/String;)Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getstatsfornovaincidentid/{incidentId}"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#downloadCustomersCalledForIncident(String)",
              "predicate": "{GET [/api/incidents/downloadcustomerscalledfornovaincidentid/{incidentid}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "downloadCustomersCalledForIncident",
                  "descriptor": "(Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/downloadcustomerscalledfornovaincidentid/{incidentid}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.UsersController#deleteUser(SpectraWebUser)",
              "predicate": "{POST [/api/users/deleteuser], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.UsersController",
                  "name": "deleteUser",
                  "descriptor": "(Lgr/wind/FullStackSpring_Review/model/SpectraWebUser;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/users/deleteuser"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.UsersController#getAllUsers()",
              "predicate": "{GET [/api/users/getalluserdetails], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.UsersController",
                  "name": "getAllUsers",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/users/getalluserdetails"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.UploadController#handleFileUpload(MultipartFile, RedirectAttributes)",
              "predicate": "{POST [/api/incidents/uploadadhocfile], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.UploadController",
                  "name": "handleFileUpload",
                  "descriptor": "(Lorg/springframework/web/multipart/MultipartFile;Lorg/springframework/web/servlet/mvc/support/RedirectAttributes;)Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/uploadadhocfile"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.AdHocOutagesController#handleFilePreview(MultipartFile, RedirectAttributes)",
              "predicate": "{POST [/api/incidents/previewadhocfile], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.AdHocOutagesController",
                  "name": "handleFilePreview",
                  "descriptor": "(Lorg/springframework/web/multipart/MultipartFile;Lorg/springframework/web/servlet/mvc/support/RedirectAttributes;)Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/previewadhocfile"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaAdHocOutagesController#getAllIncidents()",
              "predicate": "{GET [/api/incidents/nova_getalladhocoutages], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaAdHocOutagesController",
                  "name": "getAllIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_getalladhocoutages"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#downloadCustomersCalledForIncident(String)",
              "predicate": "{GET [/api/incidents/downloadcustomerscalledforwindincidentid/{incidentid}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "downloadCustomersCalledForIncident",
                  "descriptor": "(Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/downloadcustomerscalledforwindincidentid/{incidentid}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.UsersController#updateUserRole(SpectraWebUser)",
              "predicate": "{POST [/api/users/updateuserrole], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.UsersController",
                  "name": "updateUserRole",
                  "descriptor": "(Lgr/wind/FullStackSpring_Review/model/SpectraWebUser;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/users/updateuserrole"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaAdHocOutagesController#handleFilePreview(MultipartFile, RedirectAttributes)",
              "predicate": "{POST [/api/incidents/nova_previewadhocfile], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaAdHocOutagesController",
                  "name": "handleFilePreview",
                  "descriptor": "(Lorg/springframework/web/multipart/MultipartFile;Lorg/springframework/web/servlet/mvc/support/RedirectAttributes;)Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_previewadhocfile"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaUploadController#handleFileUpload(MultipartFile, RedirectAttributes)",
              "predicate": "{POST [/api/incidents/nova_uploadadhocfile], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaUploadController",
                  "name": "handleFileUpload",
                  "descriptor": "(Lorg/springframework/web/multipart/MultipartFile;Lorg/springframework/web/servlet/mvc/support/RedirectAttributes;)Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_uploadadhocfile"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#getStatsForWindIncidentID(String)",
              "predicate": "{GET [/api/incidents/getstatsforwindincidentid/{incidentId}], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "getStatsForWindIncidentID",
                  "descriptor": "(Ljava/lang/String;)Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getstatsforwindincidentid/{incidentId}"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#getAllNonScheduledIncidents()",
              "predicate": "{GET [/api/incidents/nova_getallnonscheduledincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "getAllNonScheduledIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_getallnonscheduledincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.UsersController#disableUser(SpectraWebUser)",
              "predicate": "{POST [/api/users/disableuser], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.UsersController",
                  "name": "disableUser",
                  "descriptor": "(Lgr/wind/FullStackSpring_Review/model/SpectraWebUser;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/users/disableuser"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#getClosedcdrdbIncidentsAfterDate()",
              "predicate": "{GET [/api/incidents/getclosedcdrdbincidentsafterdate/], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "getClosedcdrdbIncidentsAfterDate",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getclosedcdrdbincidentsafterdate/"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.UsersController#addNewUser(SpectraWebUser)",
              "predicate": "{POST [/api/users/addnewuser], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.UsersController",
                  "name": "addNewUser",
                  "descriptor": "(Lgr/wind/FullStackSpring_Review/model/SpectraWebUser;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/users/addnewuser"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#download(String, String)",
              "predicate": "{GET [/api/incidents/downloadfile/{dirname1}/{fileNamePattern}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "download",
                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/http/ResponseEntity;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/downloadfile/{dirname1}/{fileNamePattern}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#setWillBePublishedYESforOutageId(int)",
              "predicate": "{PUT [/api/incidents/nova_willbepublishedyesforoutageid/{id}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "setWillBePublishedYESforOutageId",
                  "descriptor": "(I)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_willbepublishedyesforoutageid/{id}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#changeMessageforOutageId(String, String)",
              "predicate": "{PUT [/api/incidents/changemessageforoutageid/{outageId}/{message}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "changeMessageforOutageId",
                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/changemessageforoutageid/{outageId}/{message}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#changeBackupPolicyforIncidentId(String, String)",
              "predicate": "{PUT [/api/incidents/nova_alterbackuppolicyforincidentid/{incidentId}/{yesorno}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "changeBackupPolicyforIncidentId",
                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_alterbackuppolicyforincidentid/{incidentId}/{yesorno}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#getOpenNonScheduledIncidents()",
              "predicate": "{GET [/api/incidents/getopennonscheduledincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "getOpenNonScheduledIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getopennonscheduledincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#changeBackupPolicyforIncidentId(String, String)",
              "predicate": "{PUT [/api/incidents/alterbackuppolicyforincidentid/{incidentId}/{yesorno}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "changeBackupPolicyforIncidentId",
                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/alterbackuppolicyforincidentid/{incidentId}/{yesorno}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#getAllcdrdbIncidents()",
              "predicate": "{GET [/api/incidents/getallcdrdbincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "getAllcdrdbIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getallcdrdbincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#errorHtml(HttpServletRequest, HttpServletResponse)",
              "predicate": "{ [/error], produces [text/html]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
                  "name": "errorHtml",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)Lorg/springframework/web/servlet/ModelAndView;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [],
                  "params": [],
                  "patterns": [
                    "/error"
                  ],
                  "produces": [
                    {
                      "mediaType": "text/html",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#getClosedcdrdbIncidents()",
              "predicate": "{GET [/api/incidents/getclosedcdrdbincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "getClosedcdrdbIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getclosedcdrdbincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#changeMessageforOutageId(String, String)",
              "predicate": "{PUT [/api/incidents/nova_changemessageforoutageid/{outageId}/{message}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "changeMessageforOutageId",
                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_changemessageforoutageid/{outageId}/{message}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.ChartsController#getStatsNumOfRequestsPerMethodForDates(DateRange)",
              "predicate": "{POST [/api/charts/num_of_requests_per_method], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.ChartsController",
                  "name": "getStatsNumOfRequestsPerMethodForDates",
                  "descriptor": "(Lgr/wind/FullStackSpring_Review/model/DateRange;)Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/charts/num_of_requests_per_method"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#setWillBePublishedNOforOutageId(int)",
              "predicate": "{PUT [/api/incidents/nova_willbepublishednoforoutageid/{id}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "setWillBePublishedNOforOutageId",
                  "descriptor": "(I)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_willbepublishednoforoutageid/{id}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController#error(HttpServletRequest)",
              "predicate": "{ [/error]}",
              "details": {
                "handlerMethod": {
                  "className": "org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController",
                  "name": "error",
                  "descriptor": "(Ljavax/servlet/http/HttpServletRequest;)Lorg/springframework/http/ResponseEntity;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [],
                  "params": [],
                  "patterns": [
                    "/error"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaChartsController#getStatsNumOfRequestsPerMethodForDates(DateRange)",
              "predicate": "{POST [/api/charts/nova_num_of_requests_per_method], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaChartsController",
                  "name": "getStatsNumOfRequestsPerMethodForDates",
                  "descriptor": "(Lgr/wind/FullStackSpring_Review/model/DateRange;)Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/charts/nova_num_of_requests_per_method"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#setWillBePublishedYESforOutageId(int)",
              "predicate": "{PUT [/api/incidents/willbepublishedyesforoutageid/{id}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "setWillBePublishedYESforOutageId",
                  "descriptor": "(I)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/willbepublishedyesforoutageid/{id}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.UsersController#changePasswordForUser(SpectraWebUser)",
              "predicate": "{POST [/api/users/changeuserpassword], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.UsersController",
                  "name": "changePasswordForUser",
                  "descriptor": "(Lgr/wind/FullStackSpring_Review/model/SpectraWebUser;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "POST"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/users/changeuserpassword"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#getOpencdrdbIncidents()",
              "predicate": "{GET [/api/incidents/getopencdrdbincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "getOpencdrdbIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getopencdrdbincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.AdHocOutagesController#deleteAdhocIncident(int)",
              "predicate": "{DELETE [/api/incidents/deleteadhocincident/{id}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.AdHocOutagesController",
                  "name": "deleteAdhocIncident",
                  "descriptor": "(I)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "DELETE"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/deleteadhocincident/{id}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController#getOpenNonScheduledIncidents()",
              "predicate": "{GET [/api/incidents/nova_getopennonscheduledincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.NovaIncidentController",
                  "name": "getOpenNonScheduledIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/nova_getopennonscheduledincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#getAllNonScheduledIncidents()",
              "predicate": "{GET [/api/incidents/getallnonscheduledincidents], produces [application/json]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "getAllNonScheduledIncidents",
                  "descriptor": "()Ljava/util/List;"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "GET"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/getallnonscheduledincidents"
                  ],
                  "produces": [
                    {
                      "mediaType": "application/json",
                      "negated": false
                    }
                  ]
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#changeMessageforIncidentId(String, String)",
              "predicate": "{PUT [/api/incidents/changemessageforincidentid/{incidentId}/{message}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "changeMessageforIncidentId",
                  "descriptor": "(Ljava/lang/String;Ljava/lang/String;)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/changemessageforincidentid/{incidentId}/{message}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "gr.wind.FullStackSpring_Review.controllers.IncidentController#setWillBePublishedNOforOutageId(int)",
              "predicate": "{PUT [/api/incidents/willbepublishednoforoutageid/{id}]}",
              "details": {
                "handlerMethod": {
                  "className": "gr.wind.FullStackSpring_Review.controllers.IncidentController",
                  "name": "setWillBePublishedNOforOutageId",
                  "descriptor": "(I)V"
                },
                "requestMappingConditions": {
                  "consumes": [],
                  "headers": [],
                  "methods": [
                    "PUT"
                  ],
                  "params": [],
                  "patterns": [
                    "/api/incidents/willbepublishednoforoutageid/{id}"
                  ],
                  "produces": []
                }
              }
            },
            {
              "handler": "ResourceHttpRequestHandler [class path resource [META-INF/resources/webjars/]]",
              "predicate": "/webjars/**",
              "details": null
            },
            {
              "handler": "ResourceHttpRequestHandler [class path resource [META-INF/resources/], class path resource [resources/], class path resource [static/], class path resource [public/], ServletContext resource [/]]",
              "predicate": "/**",
              "details": null
            }
          ]
        },
        "servletFilters": [
          {
            "servletNameMappings": [],
            "urlPatternMappings": [
              "/*"
            ],
            "name": "webMvcMetricsFilter",
            "className": "org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter"
          },
          {
            "servletNameMappings": [],
            "urlPatternMappings": [
              "/*"
            ],
            "name": "requestContextFilter",
            "className": "org.springframework.boot.web.servlet.filter.OrderedRequestContextFilter"
          },
          {
            "servletNameMappings": [],
            "urlPatternMappings": [
              "/*"
            ],
            "name": "Tomcat WebSocket (JSR356) Filter",
            "className": "org.apache.tomcat.websocket.server.WsFilter"
          },
          {
            "servletNameMappings": [],
            "urlPatternMappings": [
              "/*"
            ],
            "name": "corsFilter",
            "className": "gr.wind.FullStackSpring_Review.filters.CorsFilter"
          },
          {
            "servletNameMappings": [],
            "urlPatternMappings": [
              "/*"
            ],
            "name": "characterEncodingFilter",
            "className": "org.springframework.boot.web.servlet.filter.OrderedCharacterEncodingFilter"
          },
          {
            "servletNameMappings": [],
            "urlPatternMappings": [
              "/*"
            ],
            "name": "springSecurityFilterChain",
            "className": "org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean$1"
          },
          {
            "servletNameMappings": [],
            "urlPatternMappings": [
              "/*"
            ],
            "name": "formContentFilter",
            "className": "org.springframework.boot.web.servlet.filter.OrderedFormContentFilter"
          },
          {
            "servletNameMappings": [],
            "urlPatternMappings": [
              "/*"
            ],
            "name": "jwtRequestFilter",
            "className": "gr.wind.FullStackSpring_Review.filters.JwtRequestFilter"
          }
        ],
        "servlets": [
          {
            "mappings": [
              "/"
            ],
            "name": "dispatcherServlet",
            "className": "org.springframework.web.servlet.DispatcherServlet"
          }
        ]
      },
      "parentId": null
    }
  }
}
